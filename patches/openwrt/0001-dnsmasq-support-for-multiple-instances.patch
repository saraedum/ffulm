From ace82bf9658c562d73029f126a29b36811ef8e9a Mon Sep 17 00:00:00 2001
From: Moritz Warning <moritzwarning@web.de>
Date: Wed, 10 Sep 2014 23:35:33 +0200
Subject: [PATCH 01/32] dnsmasq: support for multiple instances

---
 package/network/services/dnsmasq/files/dhcp.conf   |  13 ++
 .../network/services/dnsmasq/files/dnsmasq.init    | 155 ++++++++++++---------
 2 files changed, 104 insertions(+), 64 deletions(-)

diff --git a/package/network/services/dnsmasq/files/dhcp.conf b/package/network/services/dnsmasq/files/dhcp.conf
index 660b06a..c9899f4 100644
--- a/package/network/services/dnsmasq/files/dhcp.conf
+++ b/package/network/services/dnsmasq/files/dhcp.conf
@@ -1,4 +1,5 @@
 config dnsmasq
+	#option disabled	1
 	option domainneeded	1
 	option boguspriv	1
 	option filterwin2k	0  # enable for dial on demand
@@ -20,6 +21,18 @@ config dnsmasq
 	#list notinterface	lo
 	#list bogusnxdomain     '64.94.110.11'
 
+#second instance
+config dnsmasq 'hotspot'
+	option nonwildcard      1
+	option resolvfile	'/tmp/resolv.conf.hotspot'
+
+config dhcp
+	option interface	lan
+	option start 	100
+	option limit	150
+	option leasetime	12h
+	option dnsmasq_config	'hotspot'
+
 config dhcp lan
 	option interface	lan
 	option start 	100
diff --git a/package/network/services/dnsmasq/files/dnsmasq.init b/package/network/services/dnsmasq/files/dnsmasq.init
index 942acd7..e363765 100644
--- a/package/network/services/dnsmasq/files/dnsmasq.init
+++ b/package/network/services/dnsmasq/files/dnsmasq.init
@@ -12,9 +12,9 @@ DOMAIN=""
 ADD_LOCAL_DOMAIN=1
 ADD_LOCAL_HOSTNAME=1
 
-CONFIGFILE="/var/etc/dnsmasq.conf"
-HOSTFILE="/tmp/hosts/dhcp"
-TRUSTANCHORSFILE="/usr/share/dnsmasq/trust-anchors.conf"
+CONFIGFILE=""
+HOSTFILE=""
+TRUSTANCHORSFILE=""
 
 xappend() {
 	local value="$1"
@@ -85,6 +85,10 @@ append_address() {
 	xappend "--address=$1"
 }
 
+append_listen_address() {
+	xappend "--listen-address=$1"
+}
+
 append_interface() {
 	local ifname=$(uci_get_state network "$1" ifname "$1")
 	xappend "--interface=$ifname"
@@ -103,8 +107,46 @@ append_bogusnxdomain() {
 	xappend "--bogus-nxdomain=$1"
 }
 
+filter_dnsmasq() {
+	local cfg="$1" func="$2" match_cfg="$3" found_cfg
+
+	#use entry when no dnsmasq_cfg entry set, or if it matches
+	config_get found_cfg "$cfg" "dnsmasq_config"
+	if [ -z "$found_cfg" -o "$found_cfg" = "$match_cfg" ]; then
+		$func $cfg
+	fi
+}
+
 dnsmasq() {
-	local cfg="$1"
+	local cfg="$1" disabled resolvfile
+
+	config_get_bool disabled "$cfg" 'disabled' 0
+	[ $disabled -gt 0 ] && return 0
+
+	DNS_SERVERS=""
+	DOMAIN=""
+
+	CONFIGFILE="/var/etc/dnsmasq-${cfg}.conf"
+	HOSTFILE="/tmp/hosts/dhcp-${cfg}"
+	TRUSTANCHORSFILE="/usr/share/dnsmasq/trust-anchors-${cfg}.conf"
+
+	procd_open_instance
+	procd_set_param command $PROG -C $CONFIGFILE -k
+	procd_set_param file $CONFIGFILE
+	procd_set_param respawn
+	procd_close_instance
+
+	# before we can call xappend
+	mkdir -p $(dirname $CONFIGFILE)
+
+	echo "# auto-generated config file from /etc/config/dhcp" > $CONFIGFILE
+	echo "# auto-generated config file from /etc/config/dhcp" > $HOSTFILE
+
+	# if we did this last, we could override auto-generated config
+	[ -f /etc/dnsmasq.conf ] && {
+		xappend "--conf-file=/etc/dnsmasq.conf"
+	}
+
 	append_bool "$cfg" authoritative "--dhcp-authoritative"
 	append_bool "$cfg" nodaemon "--no-daemon"
 	append_bool "$cfg" domainneeded "--domain-needed"
@@ -123,6 +165,7 @@ dnsmasq() {
 	append_bool "$cfg" nonwildcard "--bind-interfaces"
 	append_bool "$cfg" fqdn "--dhcp-fqdn"
 	append_bool "$cfg" proxydnssec "--proxy-dnssec"
+	append_bool "$cfg" bind_dynamic "--bind-dynamic"
 
 	append_parm "$cfg" dhcpscript "--dhcp-script"
 	append_parm "$cfg" cachesize "--cache-size"
@@ -135,6 +178,7 @@ dnsmasq() {
 	append_parm "$cfg" "local" "--server"
 	config_list_foreach "$cfg" "server" append_server
 	config_list_foreach "$cfg" "address" append_address
+	config_list_foreach "$cfg" "listen_address" append_listen_address
 	config_list_foreach "$cfg" "interface" append_interface
 	config_list_foreach "$cfg" "notinterface" append_notinterface
 	config_list_foreach "$cfg" "addnhosts" append_addnhosts
@@ -199,6 +243,49 @@ dnsmasq() {
 	xappend "--dhcp-broadcast=tag:needs-broadcast"
 
 	echo >> $CONFIGFILE
+	config_foreach filter_dnsmasq host dhcp_host_add $cfg
+
+	echo >> $CONFIGFILE
+	config_foreach filter_dnsmasq boot dhcp_boot_add $cfg
+	config_foreach filter_dnsmasq mac dhcp_mac_add $cfg
+	config_foreach filter_dnsmasq tag dhcp_tag_add $cfg
+	config_foreach filter_dnsmasq vendorclass dhcp_vendorclass_add $cfg
+	config_foreach filter_dnsmasq userclass dhcp_userclass_add $cfg
+	config_foreach filter_dnsmasq circuitid dhcp_circuitid_add $cfg
+	config_foreach filter_dnsmasq remoteid dhcp_remoteid_add $cfg
+	config_foreach filter_dnsmasq subscrid dhcp_subscrid_add $cfg
+	config_foreach filter_dnsmasq domain dhcp_domain_add $cfg
+	config_foreach filter_dnsmasq hostrecord dhcp_hostrecord_add $cfg
+
+	# add own hostname
+	local lanaddr
+	[ $ADD_LOCAL_HOSTNAME -eq 1 ] && network_get_ipaddr lanaddr "lan" && {
+		local hostname="$(uci_get system @system[0] hostname OpenWrt)"
+		dhcp_domain_add "" "$hostname" "$lanaddr"
+	}
+
+	echo >> $CONFIGFILE
+	config_foreach filter_dnsmasq srvhost dhcp_srv_add $cfg
+	config_foreach filter_dnsmasq mxhost dhcp_mx_add $cfg
+	echo >> $CONFIGFILE
+
+	config_get odhcpd_is_active odhcpd maindhcp
+	if [ "$odhcpd_is_active" != "1" ]; then
+		config_foreach filter_dnsmasq dhcp dhcp_add $cfg
+	fi
+
+	echo >> $CONFIGFILE
+	config_foreach filter_dnsmasq cname dhcp_cname_add $cfg
+	echo >> $CONFIGFILE
+
+	rm -f /tmp/resolv.conf
+	if [ $ADD_LOCAL_DOMAIN -eq 1 -a -n "$DOMAIN" ]; then
+		echo "search $DOMAIN" >> /tmp/resolv.conf
+	fi
+	DNS_SERVERS="$DNS_SERVERS 127.0.0.1"
+	for DNS_SERVER in $DNS_SERVERS ; do
+		echo "nameserver $DNS_SERVER" >> /tmp/resolv.conf
+	done
 }
 
 dhcp_subscrid_add() {
@@ -535,67 +622,7 @@ start_service() {
 
 	config_load dhcp
 
-	procd_open_instance
-	procd_set_param command $PROG -C $CONFIGFILE -k
-	procd_set_param file $CONFIGFILE
-	procd_set_param respawn
-	procd_close_instance
-
-	# before we can call xappend
-	mkdir -p $(dirname $CONFIGFILE)
-
-	echo "# auto-generated config file from /etc/config/dhcp" > $CONFIGFILE
-	echo "# auto-generated config file from /etc/config/dhcp" > $HOSTFILE
-
-	# if we did this last, we could override auto-generated config
-	[ -f /etc/dnsmasq.conf ] && {
-		xappend "--conf-file=/etc/dnsmasq.conf"
-	}
-
-	args=""
 	config_foreach dnsmasq dnsmasq
-	config_foreach dhcp_host_add host
-	echo >> $CONFIGFILE
-	config_foreach dhcp_boot_add boot
-	config_foreach dhcp_mac_add mac
-	config_foreach dhcp_tag_add tag
-	config_foreach dhcp_vendorclass_add vendorclass
-	config_foreach dhcp_userclass_add userclass
-	config_foreach dhcp_circuitid_add circuitid
-	config_foreach dhcp_remoteid_add remoteid
-	config_foreach dhcp_subscrid_add subscrid
-	config_foreach dhcp_domain_add domain
-	config_foreach dhcp_hostrecord_add hostrecord
-
-	# add own hostname
-	local lanaddr
-	[ $ADD_LOCAL_HOSTNAME -eq 1 ] && network_get_ipaddr lanaddr "lan" && {
-		local hostname="$(uci_get system @system[0] hostname OpenWrt)"
-		dhcp_domain_add "" "$hostname" "$lanaddr"
-	}
-
-	echo >> $CONFIGFILE
-	config_foreach dhcp_srv_add srvhost
-	config_foreach dhcp_mx_add mxhost
-	echo >> $CONFIGFILE
-
-	config_get odhcpd_is_active odhcpd maindhcp
-	if [ "$odhcpd_is_active" != "1" ]; then
-		config_foreach dhcp_add dhcp
-	fi
-
-	echo >> $CONFIGFILE
-	config_foreach dhcp_cname_add cname
-	echo >> $CONFIGFILE
-
-	rm -f /tmp/resolv.conf
-	[ $ADD_LOCAL_DOMAIN -eq 1 ] && [ -n "$DOMAIN" ] && {
-		echo "search $DOMAIN" >> /tmp/resolv.conf
-	}
-	DNS_SERVERS="$DNS_SERVERS 127.0.0.1"
-	for DNS_SERVER in $DNS_SERVERS ; do
-		echo "nameserver $DNS_SERVER" >> /tmp/resolv.conf
-	done
 }
 
 reload_service() {
-- 
2.1.4

